workflows:
  android-staging-apk:
    name: Build Android Apk Staging
    max_build_duration: 40
    instance_type: mac_mini_m2
    cache:
      cache_paths:
        - ~/.gradle/caches
        - $CM_BUILD_DIR/node_modules
        - $HOME/.gradle/caches
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: develop
      cancel_previous_builds: true
    environment:
      node: v18.20.3
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Build apk staging
        script: |
          cp .env.staging .env 
          cd android
          ./gradlew assembleStagingRelease
    artifacts:
      - android/app/build/outputs/apk/staging/release/app-staging-release.apk
    publishing:
      email:
        recipients:
          - vietnv795@gmail.com
        notify:
          success: true
          failure: true
  ios-staging-testflight:
    name: Push iOS Staging to Testflight
    max_build_duration: 40
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: app-store-connect
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - $CM_BUILD_DIR/node_modules
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
      cancel_previous_builds: true
    environment:
      vars:
        XCODE_WORKSPACE: "nutsales.xcworkspace"
        XCODE_SCHEME: "nutsales(staging)"
        APP_ID: 6503223654
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.nutsales.light
      node: v18.20.3
      xcode: 16.0
      cocoapods: default
    scripts:
      - name: Set env to tmp.xcconfig
        script: |
          touch $CM_BUILD_DIR/ios/tmp.xcconfig
          cp $CM_BUILD_DIR/.env.staging $CM_BUILD_DIR/ios/tmp.xcconfig
          sed -i '' 's/["\047]//g' $CM_BUILD_DIR/ios/tmp.xcconfig
      - name: Install yarn dependencies
        script: |
          yarn install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Cat file exportlist
        script: cat /Users/builder/export_options.plist
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
      email:
        recipients:
          - vietnv795@gmail.com
        notify:
          success: true
          failure: true
  ios-production-testflight:
    name: Push iOS Production to Testflight
    max_build_duration: 40
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: app-store-connect
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
        - $CM_BUILD_DIR/node_modules
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main1
      cancel_previous_builds: true
    environment:
      vars:
        XCODE_WORKSPACE: "nutsales.xcworkspace"
        XCODE_SCHEME: "nutsales(production)"
        APP_ID: 6503186410
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.nutsales.app
      node: v18.20.3
      xcode: 16.0
      cocoapods: default
    scripts:
      - name: Set env to tmp.xcconfig
        script: |
          touch $CM_BUILD_DIR/ios/tmp.xcconfig
          cp $CM_BUILD_DIR/.env.production $CM_BUILD_DIR/ios/tmp.xcconfig
          sed -i '' 's/["\047]//g' $CM_BUILD_DIR/ios/tmp.xcconfig
      - name: Install yarn dependencies
        script: |
          yarn install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Cat file exportlist
        script: cat /Users/builder/export_options.plist
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false
      email:
        recipients:
          - vietnv795@gmail.com
        notify:
          success: true
          failure: true
  android-production-apk:
    name: Build Android Apk Production
    max_build_duration: 40
    instance_type: mac_mini_m2
    cache:
      cache_paths:
        - ~/.gradle/caches
        - $CM_BUILD_DIR/node_modules
        - $HOME/.gradle/caches
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main1
      cancel_previous_builds: true
    environment:
      node: v18.20.3
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Build apk staging
        script: |
          cp .env.staging .env 
          cd android
          ./gradlew assembleStagingRelease
    artifacts:
      - android/app/build/outputs/apk/staging/release/app-staging-release.apk
    publishing:
      email:
        recipients:
          - vietnv795@gmail.com
        notify:
          success: true
          failure: true
  android-production-playstore:
    name: Push Android Production to Playstore
    max_build_duration: 40
    instance_type: mac_mini_m2
    cache:
      cache_paths:
        - ~/.gradle/caches
        - $CM_BUILD_DIR/node_modules
        - $HOME/.gradle/caches
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main1
      cancel_previous_builds: true
    environment:
      node: v18.20.3
      groups:
        - google_credentials
    scripts:
      - name: Install yarn dependencies
        script: |
          yarn
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Build apk staging
        script: |
          cp .env.staging .env 
          cd android
          ./gradlew assembleStagingRelease
    artifacts:
      - android/app/build/outputs/apk/staging/release/app-staging-release.apk
    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
      email:
        recipients:
          - vietnv795@gmail.com
        notify:
          success: true
          failure: true
